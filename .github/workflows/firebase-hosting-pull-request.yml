# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR
on: 
  pull_request:
    branches: 
      - main
    paths:
      - 'content/**'
      - 'layouts/**'
      - 'themes/**'
      - 'static/**'
      - 'assets/**'
      - 'data/**'
      - 'i18n/**'
      - 'archetypes/**'
      - 'resources/**'
      - 'hugo.yml'
      - 'hugo.yaml'
      - 'hugo.toml'
      - 'config.yml'
      - 'config.yaml'
      - 'config.toml'
      - 'go.mod'
      - 'go.sum'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/test-hugo-build.yml'
      - '.github/workflows/firebase-hosting-pull-request.yml'

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  build_and_preview:
    # Only run if this is from the same repository and build test passes
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.148.2
      GO_VERSION: 1.24.5
      NODE_VERSION: 22.18.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive  # Fetch Hugo themes
          fetch-depth: 0         # Fetch all history for .GitInfo and .Lastmod
      
      - name: Wait for Hugo build test to pass
        uses: actions/github-script@v7
        with:
          script: |
            const maxWaitTime = 300000; // 5 minutes
            const checkInterval = 10000; // 10 seconds
            let elapsedTime = 0;
            
            console.log('Waiting for Hugo build test to complete...');
            
            while (elapsedTime < maxWaitTime) {
              const { data: checkRuns } = await github.rest.checks.listForRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: context.payload.pull_request.head.sha
              });
              
              const buildTest = checkRuns.check_runs.find(run => 
                run.name === 'test-build' && run.status === 'completed'
              );
              
              if (buildTest) {
                console.log(`Build test completed with status: ${buildTest.conclusion}`);
                if (buildTest.conclusion === 'success') {
                  console.log('✅ Hugo build test passed! Proceeding with deployment.');
                  return;
                } else {
                  core.setFailed(`❌ Hugo build test failed with status: ${buildTest.conclusion}`);
                  return;
                }
              }
              
              console.log(`Build test still running... waiting ${checkInterval/1000}s`);
              await new Promise(resolve => setTimeout(resolve, checkInterval));
              elapsedTime += checkInterval;
            }
            
            core.setFailed('❌ Timeout waiting for Hugo build test to complete');
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Create directory for user-specific executable files
        run: |
          mkdir -p "${HOME}/.local"
      
      - name: Install Hugo
        run: |
          curl -sLJO "https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz"
          mkdir "${HOME}/.local/hugo"
          tar -C "${HOME}/.local/hugo" -xf "hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz"
          rm "hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz"
          echo "${HOME}/.local/hugo" >> "${GITHUB_PATH}"
      
      - name: Verify Hugo installation
        run: |
          echo "Hugo: $(hugo version)"
          echo "Go: $(go version)"
          echo "Node.js: $(node --version)"
      
      - name: Install Node.js dependencies
        run: |
          [[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true
      
      - name: Configure Git
        run: |
          git config core.quotepath false
      
      - name: Build Hugo site
        run: |
          # Build Hugo site with relative URLs for Firebase preview
          hugo \
            --gc \
            --minify \
            --environment production \
            --baseURL "/"
      
      - name: Deploy to Firebase Hosting Preview Channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_MYBLOG_4E0DA }}
          projectId: myblog-4e0da
          channelId: pr-${{ github.event.pull_request.number }}
