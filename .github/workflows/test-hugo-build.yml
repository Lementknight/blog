name: Test Hugo Build
on:
  pull_request:
    branches: 
      - main
  push:
    branches:
      - test/*
      - feature/*
      - develop

permissions:
  contents: read

jobs:
  test-build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.148.2
      GO_VERSION: 1.24.5
      NODE_VERSION: 22.18.0
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive  # Fetch Hugo themes
          fetch-depth: 0         # Fetch all history for .GitInfo and .Lastmod
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Create directory for user-specific executable files
        run: |
          mkdir -p "${HOME}/.local"
      
      - name: Install Hugo
        run: |
          curl -sLJO "https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz"
          mkdir "${HOME}/.local/hugo"
          tar -C "${HOME}/.local/hugo" -xf "hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz"
          rm "hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz"
          echo "${HOME}/.local/hugo" >> "${GITHUB_PATH}"
      
      - name: Verify Hugo installation
        run: |
          echo "Hugo: $(hugo version)"
          echo "Go: $(go version)"
          echo "Node.js: $(node --version)"
      
      - name: Install Node.js dependencies
        run: |
          [[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true
      
      - name: Configure Git
        run: |
          git config core.quotepath false
      
      - name: Cache restore
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ runner.temp }}/hugo_cache
          key: hugo-test-${{ github.run_id }}-${{ github.sha }}
          restore-keys: |
            hugo-test-${{ github.run_id }}-
            hugo-test-
            hugo-
      
      - name: Test Hugo build (production)
        run: |
          echo "Testing Hugo build with production environment..."
          hugo \
            --gc \
            --minify \
            --environment production \
            --cacheDir "${{ runner.temp }}/hugo_cache" \
            --baseURL "/" \
            --destination public-test
          
          echo "✅ Production build successful"
      
      - name: Test Hugo build (development) 
        run: |
          echo "Testing Hugo build with development environment..."
          hugo \
            --buildDrafts \
            --buildFuture \
            --cacheDir "${{ runner.temp }}/hugo_cache" \
            --baseURL "/" \
            --destination public-dev-test
          
          echo "✅ Development build successful"
      
      - name: Validate generated content
        run: |
          echo "Validating generated content..."
          
          # Check that essential files were generated
          if [ ! -f "public-test/index.html" ]; then
            echo "❌ Error: index.html not generated"
            exit 1
          fi
          
          # Check that CSS files exist
          if [ ! -d "public-test/assets" ]; then
            echo "❌ Error: assets directory not generated"
            exit 1
          fi
          
          # Check that static files were copied
          if [ ! -f "public-test/favicon.ico" ]; then
            echo "❌ Error: favicon.ico not copied"
            exit 1
          fi
          
          echo "✅ Content validation successful"
      
      - name: Cache save
        id: cache-save
        uses: actions/cache/save@v4
        with:
          path: ${{ runner.temp }}/hugo_cache
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}
      
      - name: Upload build artifacts (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: hugo-build-logs
          path: |
            public-test/
            public-dev-test/
          retention-days: 3
